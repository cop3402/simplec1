c(i) : function(int) -> char { return (char)i + '0'; }

isValid(board, row, col, check)
    : function(pointer<pointer<char>>, int, int, char) -> int {
  int i;
  int returnVal;
  i = 0;
  returnVal = 1;
  while (i < 9) {
    if (board[row][i] == check) {
      returnVal = 0;
    }

    if (board[i][col] == check)
      returnVal = 0;
    if (board[(i / 3) + 3 * (row / 3)][(i % 3) + 3 * (col / 3)] == check)
      returnVal = 0;
    i = i + 1;
  }

  return returnVal;
}

solve(board, row, col) : function(pointer<pointer<char>>, int, int) -> int {
  int i;
  int returnVal;
  int nextrow;
  int nextcol;

  returnVal = 0;
  if (col < 8) {
    nextcol = col + 1;
  } else {
    nextcol = 0;
    nextrow = row + 1;
  }
  if (row == 9)
    returnVal = 1;
  else {
    if (board[row][col] != '.')
      returnVal = solve(board, nextrow, nextcol);
    else {
      while (i < 10) {
        if (isValid(board, row, col, c(i))) {
          board[row][col] = c(i);
          if (solve(board, nextrow, nextcol))
            returnVal = 1;
          else {
            board[row][col] = '.';
          }
        }
        i = i + 1;
      }
    }
  }

  return returnVal;
}

main {
  int sol;
  pointer<pointer<char>> board;
  sol = solve(board, 0, 0);
  return sol;
}